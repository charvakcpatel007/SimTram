<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2013 ApPeAL Group, Politecnico di Torino This file is 
	part of TraCI4J. TraCI4J is free software: you can redistribute it and/or 
	modify it under the terms of the GNU General Public License as published 
	by the Free Software Foundation, either version 3 of the License, or (at 
	your option) any later version. TraCI4J is distributed in the hope that it 
	will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
	of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
	Public License for more details. You should have received a copy of the GNU 
	General Public License along with TraCI4J. If not, see <http://www.gnu.org/licenses/>. -->

<traciClass>
	<name>Lane</name>

	<javadoc>
	Representation of a lane in the SUMO environment.
	@see &lt;a href="http://sumo.dlr.de/wiki/Networks/SUMO_Road_Networks#Edges_and_Lanes"&gt;SUMO documentation&lt;/a&gt;
	@see &lt;a href="http://sumo.dlr.de/wiki/TraCI/Lane_Value_Retrieval"&gt;TraCI documentation&lt;/a&gt;
	@author Enrico Gueli &amp;lt;enrico.gueli@polito.it&amp;gt;
	</javadoc>

	<repos>
		<repo>Edge</repo>
		<repo>Lane</repo>
	</repos>

	<command>it.polito.appeal.traci.protocol.Constants.CMD_GET_LANE_VARIABLE
	</command>

	<readQueries>
		<readQuery>
			<name>ReadShape</name>
			<enum>SHAPE</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_SHAPE</const>
			<query>ReadShapeQuery</query>
			<returnType>java.awt.geom.Path2D</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadLength</name>
			<enum>LENGTH</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_LENGTH</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>Double</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadWidth</name>
			<enum>WIDTH</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_WIDTH</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>Double</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadLastStepOccupancy</name>
			<enum>LAST_STEP_OCCUPANCY</enum>
			<const>it.polito.appeal.traci.protocol.Constants.LAST_STEP_OCCUPANCY
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadMaxSpeed</name>
			<enum>MAX_SPEED</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_MAXSPEED</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>Double</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadParentEdge</name>
			<enum>PARENT_EDGE</enum>
			<const>it.polito.appeal.traci.protocol.Constants.LANE_EDGE_ID</const>
			<query>ReadObjectVarQuery.EdgeQ</query>
			<returnType>Edge</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadLinks</name>
			<enum>LINKS</enum>
			<const>it.polito.appeal.traci.protocol.Constants.LANE_LINKS</const>
			<query>ReadLinksQuery</query>
			<returnType>java.util.List&lt;Link&gt;</returnType>
			<dynamic>false</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadLastStepVehicleNumber</name>
			<enum>LAST_STEP_VEHICLE_NUMBER</enum>
			<const>it.polito.appeal.traci.protocol.Constants.LAST_STEP_VEHICLE_NUMBER
			</const>
			<query>ReadObjectVarQuery.IntegerQ</query>
			<returnType>Integer</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadCO2Emission</name>
			<enum>CO2_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_CO2EMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadCOEmission</name>
			<enum>CO_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_COEMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadHCEmission</name>
			<enum>HC_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_HCEMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadPMXEmission</name>
			<enum>PMX_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_PMXEMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadNOXEmission</name>
			<enum>NOX_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_NOXEMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadFuelConsumption</name>
			<enum>FUEL_CONSUMPTION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_FUELCONSUMPTION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
		<readQuery>
			<name>ReadNoiseEmission</name>
			<enum>NOISE_EMISSION</enum>
			<const>it.polito.appeal.traci.protocol.Constants.VAR_NOISEEMISSION
			</const>
			<query>ReadObjectVarQuery.DoubleQ</query>
			<returnType>java.lang.Double</returnType>
			<dynamic>true</dynamic>
		</readQuery>
	</readQueries>
	<changeStateQueries>
	</changeStateQueries>
</traciClass>
